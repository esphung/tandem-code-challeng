{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ericphung/Desktop/tandem/expo-app-solution/src/screens/WelcomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport data from \"../data/trivias.json\";\nimport uuidv4 from \"../functions/uuidv4\";\nimport Heading from \"../components/shared/Heading\";\nimport Instructions from \"../components/shared/Instructions\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 8,\n    paddingTop: 50\n  },\n  text: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center',\n    color: 'gray'\n  }\n});\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction WelcomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      answers = _useState2[0],\n      setAnswers = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questions = _useState4[0],\n      setQuestions = _useState4[1];\n\n  useEffect(function () {\n    var list = [];\n    shuffle(data).forEach(function (item, index) {\n      if (index >= global.MAX_QUESTIONS_PER_ROUND) return;\n      item.id = index;\n      list.push(item);\n    });\n    setQuestions(list);\n    setAnswers([]);\n  }, []);\n  var view = React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(Heading, {\n    title: \"Tandem Ten Trivia Game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Instructions, {\n    title: \"\\nYou will be shown each question\" + '\\n' + \"\\nQuestions are multiple choice options.\" + '\\n' + \"\\nYou can select only 1 answer out of the 4 possible answers\" + '\\n' + \"\\nThe correct answer will be revealed after you submit your answer\" + '\\n' + \"\\nYou can see your score at the end of the round\" + '\\n' + \"\\nQuestions will not repeat in a round\" + '\\n' + \"\\n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Start Game\",\n    onPress: function onPress() {\n      var results = {\n        id: uuidv4(),\n        answers: answers\n      };\n      navigation.push('Prompt', {\n        cardId: 0,\n        data: questions,\n        results: results\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Developed by Eric Phung\", '\\n', \"App Version:\", ' ', global.appVersion)));\n  return view;\n}\n\nexport default WelcomeScreen;","map":{"version":3,"sources":["/Users/ericphung/Desktop/tandem/expo-app-solution/src/screens/WelcomeScreen.js"],"names":["React","useState","useEffect","data","uuidv4","Heading","Instructions","styles","StyleSheet","create","container","flex","alignItems","padding","paddingTop","text","margin","fontSize","textAlign","color","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","WelcomeScreen","navigation","answers","setAnswers","questions","setQuestions","list","forEach","item","index","global","MAX_QUESTIONS_PER_ROUND","id","push","view","results","cardId","appVersion"],"mappings":"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","sourcesContent":["/*\nFILENAME:     WelcomeScreen.js\nPURPOSE:      Welcome screen show to user on beginning game\nAUTHOR:       Eric Phung\nCREATED:      10/26/2020 02:29 PM\n*/\nimport React, { useState, useEffect } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Button,\n} from 'react-native';\n\n// import data\nimport data from 'data/trivias.json';\n// console.log('trivias: ', trivias);\n\n// import functions\nimport uuidv4 from 'functions/uuidv4';\n\n// shared components\nimport Heading from 'components/shared/Heading';\nimport Instructions from 'components/shared/Instructions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // justifyContent: 'center',\n    alignItems: 'center',\n    // backgroundColor: 'lightblue', // '#ecf0f1',\n    padding: 8,\n    paddingTop: 50,\n  },\n  text: {\n    margin: 24,\n    fontSize: 18,\n    // fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'gray',\n  },\n});\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction WelcomeScreen({ navigation }) {\n  const [answers, setAnswers] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  // component did mount\n  useEffect(() => {\n    // set 10 (or global limit of) questions per round\n    const list = [];\n    shuffle(data).forEach((item, index) => {\n      if (index >= global.MAX_QUESTIONS_PER_ROUND) return;\n      item.id = index;\n      // return item\n      list.push(item);\n    });\n\n    setQuestions(list);\n\n    setAnswers([]);\n    // alert(global.MAX_QUESTIONS_PER_ROUND)\n  }, []);\n  const view = (\n    <View style={styles.container}>\n      <Heading title=\"Tandem Ten Trivia Game\" />\n      <Instructions title={`\nYou will be shown each question${'\\n'}\nQuestions are multiple choice options.${'\\n'}\nYou can select only 1 answer out of the 4 possible answers${'\\n'}\nThe correct answer will be revealed after you submit your answer${'\\n'}\nYou can see your score at the end of the round${'\\n'}\nQuestions will not repeat in a round${'\\n'}\n`} />\n      <View>\n        <Button\n          title=\"Start Game\"\n          onPress={() => {\n            // // format external provided data\n            // const uniqueData = (data.map((item, index) => {\n            //   // item.id = index\n            //   return item\n            // }))\n\n            // get new, empty player results\n            const results = {\n              id: uuidv4(),\n              answers,\n            };\n            navigation.push('Prompt', {\n              cardId: 0,\n              data: questions,\n              results,\n            })}\n          }\n        />\n\n        <Text style={styles.text}>\n          Developed by Eric Phung\n          {'\\n'}\n          App Version:\n          {' '}\n          { global.appVersion }\n        </Text>\n      </View>\n    </View>\n  );\n  return view;\n}\n\nexport default WelcomeScreen;\n"]},"metadata":{},"sourceType":"module"}