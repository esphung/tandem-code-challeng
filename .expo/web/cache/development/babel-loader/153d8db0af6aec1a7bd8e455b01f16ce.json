{"ast":null,"code":"var _jsxFileName = \"/Users/ericphung/Desktop/tandem/expo-app-solution/src/components/TriviaCard/MultipleChoiceList.js\",\n    _this = this;\n\nimport React from 'react';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%'\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 18,\n    flex: 1,\n    color: 'black'\n  },\n  icon: {\n    marginHorizontal: 10\n  }\n});\nvar checkedCircleIcon = React.createElement(MaterialIcons, {\n  style: styles.icon,\n  name: \"radio-button-checked\",\n  size: 24,\n  color: \"black\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 27\n  }\n});\nvar uncheckedCircleIcon = React.createElement(MaterialIcons, {\n  style: styles.icon,\n  name: \"radio-button-unchecked\",\n  size: 24,\n  color: \"black\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 29\n  }\n});\nvar selectedBackgroundColor = '#6e3b6e';\nvar unselectedBackgroundColor = selectedBackgroundColor + '40';\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      isSelected = _ref.isSelected,\n      correctAnswer = _ref.correctAnswer;\n  var view = React.createElement(TouchableOpacity, {\n    disabled: correctAnswer,\n    onPress: onPress,\n    style: [styles.item, style, {\n      borderColor: item.title === correctAnswer ? '#0bf446' : 'gray'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isSelected ? checkedCircleIcon : uncheckedCircleIcon, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, item.title));\n  return view;\n};\n\nvar MultipleChoiceList = function MultipleChoiceList(_ref2) {\n  var listData = _ref2.listData,\n      setSelectedAnswer = _ref2.setSelectedAnswer,\n      selectedAnswer = _ref2.selectedAnswer,\n      correctAnswer = _ref2.correctAnswer;\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n\n    var itemPressed = function itemPressed() {\n      return setSelectedAnswer(item);\n    };\n\n    var isSelected = item.id === selectedAnswer.id;\n    var view = React.createElement(Item, {\n      item: item,\n      onPress: itemPressed,\n      isSelected: isSelected,\n      correctAnswer: correctAnswer,\n      style: {\n        borderWidth: 1,\n        borderColor: isSelected ? 'black' : 'transparent',\n        borderRadius: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n    return view;\n  };\n\n  var view = React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    scrollEnabled: false,\n    data: listData,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    extraData: selectedAnswer.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n  return view;\n};\n\nexport default MultipleChoiceList;","map":{"version":3,"sources":["/Users/ericphung/Desktop/tandem/expo-app-solution/src/components/TriviaCard/MultipleChoiceList.js"],"names":["React","MaterialIcons","styles","StyleSheet","create","container","flex","width","item","flexDirection","alignItems","padding","marginVertical","marginHorizontal","title","fontSize","color","icon","checkedCircleIcon","uncheckedCircleIcon","selectedBackgroundColor","unselectedBackgroundColor","Item","onPress","style","isSelected","correctAnswer","view","borderColor","MultipleChoiceList","listData","setSelectedAnswer","selectedAnswer","renderItem","itemPressed","id","borderWidth","borderRadius","String"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport {\n  FlatList,\n  SafeAreaView,\n  // StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n} from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    // backgroundColor: 'seagreen',\n    // marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 18,\n    flex: 1,\n    color: 'black',\n  },\n  icon: {\n    marginHorizontal: 10,\n  },\n});\n\nconst checkedCircleIcon = <MaterialIcons style={styles.icon} name=\"radio-button-checked\" size={24} color=\"black\" />;\n\nconst uncheckedCircleIcon = <MaterialIcons style={styles.icon} name=\"radio-button-unchecked\" size={24} color=\"black\" />;\n\nconst selectedBackgroundColor = '#6e3b6e';\n\nconst unselectedBackgroundColor = selectedBackgroundColor + '40' // '#f9c2ff';\n\nconst Item = ({\n  item,\n  onPress,\n  style,\n  isSelected,\n  correctAnswer,\n}) => {\n  // let borderColor = 'gray'\n  // // if (item.title === correctAnswer) {\n  // //   console.log('correctAnswer: ', correctAnswer);\n  // //   // borderColor = 'green'\n  // // }\n  const view = (\n    <TouchableOpacity disabled={correctAnswer} onPress={onPress} style={[styles.item, style, {\n      borderColor: item.title === correctAnswer ? '#0bf446' : 'gray',\n    }]}>\n      {\n        isSelected ? checkedCircleIcon : uncheckedCircleIcon\n      }\n      <Text style={styles.title}>{item.title}</Text>\n    </TouchableOpacity>\n  );\n  return view;\n};\n\nconst MultipleChoiceList = ({\n  listData,\n  setSelectedAnswer,\n  selectedAnswer,\n  correctAnswer,\n}) => {\n\n  // list methods\n  const renderItem = ({ item }) => {\n    const itemPressed = () => setSelectedAnswer(item);\n    // const backgroundColor = item.id === selectedAnswer.id ? selectedBackgroundColor : unselectedBackgroundColor;\n    const isSelected = item.id === selectedAnswer.id \n    const view = (\n      <Item\n        item={item}\n        onPress={itemPressed}\n        isSelected={isSelected}\n        correctAnswer={correctAnswer}\n        style={{\n          // styled when selected\n          // backgroundColor,\n\n          borderWidth: 1,\n          borderColor: isSelected ? 'black' : 'transparent',\n          borderRadius: 12,\n          // borderStyle: 'solid',\n        }}\n      />\n    );\n    return view;\n  };\n  const view = (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        scrollEnabled={false}\n        data={listData}\n        renderItem={renderItem}\n        keyExtractor={(item) => String(item.id)}\n        extraData={selectedAnswer.id}\n        // extraData={selectedId}\n      />\n    </SafeAreaView>\n  );\n  return view;\n};\n\nexport default MultipleChoiceList;\n"]},"metadata":{},"sourceType":"module"}